在第二十四关发现好多PHP文件，全部审计完一遍后。发现修改密码直接带入查询没有做任何过滤
通过注册一个admin'#的用户，然后进去修改密码。发现报错，退出尝试用admin+刚刚被修改的密码
发现登陆成功。

这说明：
将数据带入到数据库，但是由于程序的处理逻辑不足。导致插入的数据
带有注入语句，当另一个程序执行数据库的增，删，改，查引发二次注入

通过这个例子我们逆向猜测出，现实可能也有这种情况。
所以在挖洞的时候可以进行一定的测试

测试方法：
有用户注册界面的，尝试注册 username'
然后在要通过查询数据库获取信息的（类似于个人界面）
看看会不会报错，如果报错，很大可能存在注入。然后尝试闭合，如果返回正常就是存在注入了
也验证了某师父说的：封框必插