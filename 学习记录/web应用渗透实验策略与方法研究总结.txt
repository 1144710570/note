功能测试：
在功能测试中，需要对web应用程序中的每一个实际功能进行测试，并验证这些功能是否能够完全按照规范或者标准来运行。测试过程需要访问web页面
中所有的链接。其中不仅包括所有的页面超链接，数据库链接以及表单链接，而且还包括所有需要信息收集并上传用户数据的表单元素。

可用性测试： （国内的站就直接省略这一步吧，没什么用）
网站应用上手简单，易于使用
操作指引应该简单明了，表达明确
每一个页面的标题应当能概括页面的主要内容
网站中的内容应该保持一致性

接口测试：
在接口测试中，web应用程序接口，web服务器接口和数据库服务接口都是需要测试的主要接口
在进行接口测试的过程中，测试人员需要访问这些服务器之间的全部交互信息，并对交互信息进行
分析，以此来判断接口间的数据处理是否正确。如果web应用程序的后台数据库返回了查询错误
那么在正常情况下，应用程序服务器应当捕获到异常，并将错误信息以适当的方式显示给终端用户

兼容性测试：
网站的兼容性测试是非常重要的，在进行兼容性测试过程中，需要测试的方面包括操作系统兼容性，页面打印兼容性和浏览器兼容性等

性能测试：
测试人员在进行web应用程序安全测试时必须熟悉HTTP协议，他们不仅了解服务器与客户端是如何进行通信的，而且还有说明
确HTTP完整的工作流程。需要注意的是，Web应用程序的安全性相对其他类型的应用程序来说是比较低的，因为测试人员必须
详细检查目标存在web应用中可能存在的每一个缺陷

web漏洞：
弱口令
SQL注入
远程代码执行
命令执行
文件包含
URL跳转
子域名接管
XSS注入
CSRF
SSRF
文件上传漏洞
敏感信息泄露
暴力破解
XXE

总结：
1.了解并识别目标应用程序安全需求
2.尽可能收集关于Web应用程序的所有信息，包括后台服务器信息，网络架构及设置信息，编程开发语言，技术实现细节及硬件配置等
3.识别可能存在的安全风险或漏洞，并列出清单
4.根据列表建立威胁模型
5.根据识别出的潜在风险或漏洞指定一个测试计划
6.为每一个安全风险或漏洞制作一个跟踪矩阵
7.准备好安全测试的试用例文档
8.执行安全漏洞测试试用例
9.在已识别出的安全缺陷被修复后，重新进行测试
10.生成安全测试文档，其中需要包括安全风险或漏洞的详细描述，以及仍然存在的风险详情